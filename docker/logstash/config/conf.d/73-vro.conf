filter {
  if "VRO" in [tags] {
#    multiline {
#      pattern => "-->"
#      what => "previous"
#    }
    grok {
      match => [
        "message", "<%{POSINT:syslog_pri}>%{POSINT:vcenter_id} %{TIMESTAMP_ISO8601:@timestamp} %{IPORHOST:syslog_hostname} %{DATA:message_service} %{DATA:message_pid} %{DATA:unknown1} %{DATA:unknown2}  %{GREEDYDATA:syslog_message}",
        "message", "<%{POSINT:syslog_pri}>%{POSINT:vcenter_id} %{TIMESTAMP_ISO8601:@timestamp} %{IPORHOST:syslog_hostname} %{DATA:message_service} %{DATA:message_pid} %{DATA:unknown1}  %{GREEDYDATA:syslog_message}",
        "message", "<%{POSINT:syslog_pri}>%{POSINT:vcenter_id} %{TIMESTAMP_ISO8601:@timestamp} %{IPORHOST:syslog_hostname} %{DATA:message_service} %{GREEDYDATA:syslog_message}"
      ]
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
#    syslog_pri { }
#    date {
#      match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
#      timezone => "CET"
#    }
#    if !("_grokparsefailure" in [tags]) {
#      mutate {
#        replace => [ "syslog_hostname", "vro" ]
#        replace => [ "syslog_message", "_grokparsefailure" ]
#      }
#    }
  }
}
